name: TerraformApply

run-name: Github action for Apply for AWS Dummy Resources
# When this workflow runs
on:
  # Triggers the workflow when merge code to main
  pull_request:
    branches: [ "main" ]
    
  # Run the workflow manually
  workflow_dispatch:
#Env variables. I have created a new Project (CI/CD) and a new workspace
env:
  TF_CLOUD_ORGANIZATION: "cloud-bizarre"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "gha-test"
  CONFIG_DIRECTORY: "./"
  
jobs:
  #Testing the Terraform action
  terraform-apply:
    runs-on: ubuntu-latest
    permissions: write-all
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout code
        id: checkout
        uses: actions/checkout@v3
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        id: setup_tf_version
        with:
          terraform_version: 1.1.7
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
          terraform_wrapper: true
            
      - name: Terraform Init
        id: init
        run: terraform init
      
      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
      
      - name: Terraform apply
        id: first_apply
        uses: dflook/terraform-apply@v1
        with: 
          workspace: ${{env.TF_WORKSPACE}}

      - name: Retry failed apply
        id: retry_if_fails
        uses: dflook/terraform-apply@v1
        if: ${{ steps.first_apply.outputs.failure-reason == 'apply-failed' }}
        with:
          auto_approve: true
          workspace: ${{env.TF_WORKSPACE}}
      
      - name: Destroy resources if deployment fails
        id: destroy_if_fails
        uses: dflook/terraform-destroy@v1
        if: ${{ steps.retry_if_fails.outputs.failure-reason == 'apply-failed' }}
        with:
          workspace: ${{env.TF_WORKSPACE}}
      

        
