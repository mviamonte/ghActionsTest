# A workflow to alow formate Terraform code

name: TerraformPlan

# When this workflow runs
on:
  # Triggers the workflow based on the following events
  pull_request:
    branches: [ "main" ]
    
  # Run the workflow manually
  workflow_dispatch:
#Env variables. I have created a new Project (CI/CD) and a new workspace
env:
  TF_CLOUD_ORGANIZATION: "cloud-bizarre"
  TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
  TF_WORKSPACE: "gha-test"
  CONFIG_DIRECTORY: "./"
  
jobs:
  #Testing the Terraform action
  terraform_check_code:
    runs-on: ubuntu-latest
    steps:
      # Checking out the code repo
      - uses: actions/checkout@v3
      
      # Executing a step to follow up the workflow
      - name: Checkout status
        run: echo Checkout is done
        
      #Define the terraform version
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.1.7
      #Set the credentials
      - uses: hashicorp/setup-terraform@v2
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      #Install wrapper script
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: true
          
     #Execute the terraform init command and generate some outputs
      - uses: hashicorp/setup-terraform@v2
      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: true

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: true
      # Run outputs from Terraform plan
      - run: echo ${{ steps.plan.outputs.stdout }}
      - run: echo ${{ steps.plan.outputs.stderr }}
      - run: echo ${{ steps.plan.outputs.exitcode }}
      #Comments the PR with the output of terraform plan
      - uses: actions/github-script@v6
        if: github.event_name == 'pull_request'
        env:
          PLAN: "terraform\n${{ steps.plan.outputs.stdout }}"
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const output = `#### Terraform Format and Style üñå\`${{ steps.fmt.outcome }}\`
            #### Terraform Initialization ‚öôÔ∏è\`${{ steps.init.outcome }}\`
            #### Terraform Validation ü§ñ\`${{ steps.validate.outcome }}\`
            <details><summary>Validation Output</summary>

            \`\`\`\n
            ${{ steps.validate.outputs.stdout }}
            \`\`\`

            </details>

            #### Terraform Plan üìñ\`${{ steps.plan.outcome }}\`

            <details><summary>Show Plan</summary>

            \`\`\`\n
            ${process.env.PLAN}
            \`\`\`

            </details>

            *Pusher: @${{ github.actor }}, Action: \`${{ github.event_name }}\`, Working Directory: \`${{ env.tf_actions_working_dir }}\`, Workflow: \`${{ github.workflow }}\`*`;

            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            })

